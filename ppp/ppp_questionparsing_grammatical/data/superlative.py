from ppp_datamodel import first, last

superlativeNoun = {
    # associate relevant predicate to each uperlative
    'biggest'   : 'size',
    'smallest'  : 'size',
    'broadest'  : 'width',
    'coldest'   : 'temperature',
    'deepest'   : 'depth',
    'densest'   : 'density',
    'furthest'  : 'distance',
    'farthest'  : 'distance',
    'fattest'   : 'weight',
    'hardest'   : 'difficulty',
    'heaviest'  : 'weight',
    'highest'   : 'height',
    'hottest'   : 'temperature',
    'largest'   : 'width',
    'longest'   : 'length',
    'loudest'   : 'sound',
    'lowest'    : 'height',
    'noisiest'  : 'sound',
    'oldest'    : 'age',
    'eldest'    : 'age',
    'quickest'  : 'speed',
    'fastest'   : 'speed',
    'shortest'  : 'length',
    'slimmest'  : 'weight',
    'slowest'   : 'speed',
    'strongest' : 'strength',
    'thickest'  : 'thickness',
    'warmest'   : 'temperature',
    'wettest'   : 'humidity',
    'widest'    : 'width',
    'youngest'  : 'age',
    'cheapest'  : 'cost',
    'tallest'   : 'height',
    #
    'recent'    : 'date',
    'expensive' : 'cost',
    'popular'   : 'popularity',
}

superlativeOrder = {
    # associate sorting order to each uperlative
    'first'     : first,
    'last'      : last,
    'biggest'   : last,
    'smallest'  : last,
    'broadest'  : last,
    'coldest'   : first,
    'deepest'   : last,
    'densest'   : last,
    'furthest'  : last,
    'farthest'  : last,
    'fattest'   : last,
    'hardest'   : last,
    'heaviest'  : last,
    'highest'   : last,
    'hottest'   : last,
    'largest'   : last,
    'longest'   : last,
    'loudest'   : last,
    'lowest'    : first,
    'noisiest'  : last,
    'oldest'    : last,
    'eldest'    : last,
    'quickest'  : last,
    'fastest'   : last,
    'shortest'  : first,
    'slimmest'  : first,
    'slowest'   : first,
    'strongest' : last,
    'thickest'  : last,
    'warmest'   : last,
    'wettest'   : last,
    'widest'    : last,
    'youngest'  : first,
    'cheapest'  : first,
    'tallest'   : last,
    #
    'most'      : last,
    'least'     : first,
}
