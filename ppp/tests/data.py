from ppp_questionparsing_grammatical import computeTree, simplify, DependenciesTree, normalFormProduction

# Parsing result of "John Smith lives in the United Kingdom."
def give_john_smith():
    return {'collapsed-dependencies': [{'dependent': 3, 'governor': 0, 'governorGloss': 'ROOT', 'dependentGloss': 'lives', 'dep': 'ROOT'}, {'dependent': 1, 'governor': 2, 'governorGloss': 'Smith', 'dependentGloss': 'John', 'dep': 'compound'}, {'dependent': 2, 'governor': 3, 'governorGloss': 'lives', 'dependentGloss': 'Smith', 'dep': 'nsubj'}, {'dependent': 4, 'governor': 7, 'governorGloss': 'Kingdom', 'dependentGloss': 'in', 'dep': 'case'}, {'dependent': 5, 'governor': 7, 'governorGloss': 'Kingdom', 'dependentGloss': 'the', 'dep': 'det'}, {'dependent': 6, 'governor': 7, 'governorGloss': 'Kingdom', 'dependentGloss': 'United', 'dep': 'compound'}, {'dependent': 7, 'governor': 3, 'governorGloss': 'lives', 'dependentGloss': 'Kingdom', 'dep': 'nmod:in'}, {'dependent': 8, 'governor': 3, 'governorGloss': 'lives', 'dependentGloss': '.', 'dep': 'punct'}], 'basicDependencies': [{'dependent': 3, 'governor': 0, 'governorGloss': 'ROOT', 'dependentGloss': 'lives', 'dep': 'ROOT'}, {'dependent': 1, 'governor': 2, 'governorGloss': 'Smith', 'dependentGloss': 'John', 'dep': 'compound'}, {'dependent': 2, 'governor': 3, 'governorGloss': 'lives', 'dependentGloss': 'Smith', 'dep': 'nsubj'}, {'dependent': 4, 'governor': 7, 'governorGloss': 'Kingdom', 'dependentGloss': 'in', 'dep': 'case'}, {'dependent': 5, 'governor': 7, 'governorGloss': 'Kingdom', 'dependentGloss': 'the', 'dep': 'det'}, {'dependent': 6, 'governor': 7, 'governorGloss': 'Kingdom', 'dependentGloss': 'United', 'dep': 'compound'}, {'dependent': 7, 'governor': 3, 'governorGloss': 'lives', 'dependentGloss': 'Kingdom', 'dep': 'nmod'}, {'dependent': 8, 'governor': 3, 'governorGloss': 'lives', 'dependentGloss': '.', 'dep': 'punct'}], 'collapsed-ccprocessed-dependencies': [{'dependent': 3, 'governor': 0, 'governorGloss': 'ROOT', 'dependentGloss': 'lives', 'dep': 'ROOT'}, {'dependent': 1, 'governor': 2, 'governorGloss': 'Smith', 'dependentGloss': 'John', 'dep': 'compound'}, {'dependent': 2, 'governor': 3, 'governorGloss': 'lives', 'dependentGloss': 'Smith', 'dep': 'nsubj'}, {'dependent': 4, 'governor': 7, 'governorGloss': 'Kingdom', 'dependentGloss': 'in', 'dep': 'case'}, {'dependent': 5, 'governor': 7, 'governorGloss': 'Kingdom', 'dependentGloss': 'the', 'dep': 'det'}, {'dependent': 6, 'governor': 7, 'governorGloss': 'Kingdom', 'dependentGloss': 'United', 'dep': 'compound'}, {'dependent': 7, 'governor': 3, 'governorGloss': 'lives', 'dependentGloss': 'Kingdom', 'dep': 'nmod:in'}, {'dependent': 8, 'governor': 3, 'governorGloss': 'lives', 'dependentGloss': '.', 'dep': 'punct'}], 'parse': '(ROOT\n  (S\n    (NP (NNP John) (NNP Smith))\n    (VP (VBZ lives)\n      (PP (IN in)\n        (NP (DT the) (NNP United) (NNP Kingdom))))\n    (. .)))', 'index': 0, 'text': 'John Smith lives in the United Kingdom.', 'tokens': [{'after': ' ', 'ner': 'PERSON', 'characterOffsetBegin': 0, 'lemma': 'John', 'word': 'John', 'before': '', 'characterOffsetEnd': 4, 'originalText': 'John', 'index': 1, 'pos': 'NNP'}, {'after': ' ', 'ner': 'PERSON', 'characterOffsetBegin': 5, 'lemma': 'Smith', 'word': 'Smith', 'before': ' ', 'characterOffsetEnd': 10, 'originalText': 'Smith', 'index': 2, 'pos': 'NNP'}, {'after': ' ', 'ner': 'O', 'characterOffsetBegin': 11, 'lemma': 'live', 'word': 'lives', 'before': ' ', 'characterOffsetEnd': 16, 'originalText': 'lives', 'index': 3, 'pos': 'VBZ'}, {'after': ' ', 'ner': 'O', 'characterOffsetBegin': 17, 'lemma': 'in', 'word': 'in', 'before': ' ', 'characterOffsetEnd': 19, 'originalText': 'in', 'index': 4, 'pos': 'IN'}, {'after': ' ', 'ner': 'O', 'characterOffsetBegin': 20, 'lemma': 'the', 'word': 'the', 'before': ' ', 'characterOffsetEnd': 23, 'originalText': 'the', 'index': 5, 'pos': 'DT'}, {'after': ' ', 'ner': 'LOCATION', 'characterOffsetBegin': 24, 'lemma': 'United', 'word': 'United', 'before': ' ', 'characterOffsetEnd': 30, 'originalText': 'United', 'index': 6, 'pos': 'NNP'}, {'after': '', 'ner': 'LOCATION', 'characterOffsetBegin': 31, 'lemma': 'Kingdom', 'word': 'Kingdom', 'before': ' ', 'characterOffsetEnd': 38, 'originalText': 'Kingdom', 'index': 7, 'pos': 'NNP'}, {'after': '', 'ner': 'O', 'characterOffsetBegin': 38, 'lemma': '.', 'word': '.', 'before': '', 'characterOffsetEnd': 39, 'originalText': '.', 'index': 8, 'pos': '.'}]}

# Dot representation of the tree for "John Smith lives in the United Kingdom."
def give_john_smith_string():
    s="digraph relations {\n"
    s+="\t\"6\"[label=\"ROOT\", shape=box];\n"
    s+="\t\"6\" -> \"5\"[label=\"ROOT\"];\n"
    s+="\t\"5\"[label=\"lives\", shape=box];\n"
    s+="\t\"5\" -> \"1\"[label=\"nsubj\"];\n"
    s+="\t\"5\" -> \"4\"[label=\"prep_in\"];\n"
    s+="\t\"1\"[label=\"Smith [PERSON]\", shape=box];\n"
    s+="\t\"1\" -> \"0\"[label=\"compound\"];\n"
    s+="\t\"0\"[label=\"John [PERSON]\", shape=box];\n"
    s+="\t\"4\"[label=\"Kingdom [LOCATION]\", shape=box];\n"
    s+="\t\"4\" -> \"2\"[label=\"det\"];\n"
    s+="\t\"4\" -> \"3\"[label=\"compound\"];\n"
    s+="\t\"2\"[label=\"the\", shape=box];\n"
    s+="\t\"3\"[label=\"United [LOCATION]\", shape=box];\n"
    s+="\tlabelloc=\"t\"\tlabel=\"John Smith lives in the United Kingdom.\";\n"
    s+="}"
    return s

# Dot representation of the tree for "John Smith lives in the United Kingdom." (prepocessing merge)
def give_john_smith_stringMerge():
    s="digraph relations {\n"
    s+="\t\"4\"[label=\"ROOT\", shape=box];\n"
    s+="\t\"4\" -> \"3\"[label=\"ROOT\"];\n"
    s+="\t\"3\"[label=\"lives in\", shape=box];\n"
    s+="\t\"3\" -> \"0\"[label=\"nsubj\"];\n"
    s+="\t\"3\" -> \"2\"[label=\"prep\"];\n"
    s+="\t\"0\"[label=\"John Smith [PERSON]\", shape=box];\n"
    s+="\t\"2\"[label=\"United Kingdom [LOCATION]\", shape=box];\n"
    s+="\t\"2\" -> \"1\"[label=\"det\"];\n"
    s+="\t\"1\"[label=\"the\", shape=box];\n"
    s+="\tlabelloc=\"t\"\tlabel=\"John Smith lives in the United Kingdom.\";\n"
    s+="}"
    return s

# Parse result of "Who wrote foo10 and foo46?"
def give_LSD_LIB():
    return {'tokens': [{'pos': 'WP', 'characterOffsetEnd': 3, 'lemma': 'who', 'word': 'Who', 'characterOffsetBegin': 0, 'after': ' ', 'originalText': 'Who', 'ner': 'O', 'before': '', 'index': 1}, {'pos': 'VBD', 'characterOffsetEnd': 9, 'lemma': 'write', 'word': 'wrote', 'characterOffsetBegin': 4, 'after': ' ', 'originalText': 'wrote', 'ner': 'O', 'before': ' ', 'index': 2}, {'pos': 'NN', 'characterOffsetEnd': 15, 'lemma': 'foo10', 'word': 'foo10', 'characterOffsetBegin': 10, 'after': ' ', 'originalText': 'foo10', 'ner': 'O', 'before': ' ', 'index': 3}, {'pos': 'CC', 'characterOffsetEnd': 19, 'lemma': 'and', 'word': 'and', 'characterOffsetBegin': 16, 'after': ' ', 'originalText': 'and', 'ner': 'O', 'before': ' ', 'index': 4}, {'pos': 'NN', 'characterOffsetEnd': 25, 'lemma': 'foo46', 'word': 'foo46', 'characterOffsetBegin': 20, 'after': '', 'originalText': 'foo46', 'ner': 'O', 'before': ' ', 'index': 5}, {'pos': '.', 'characterOffsetEnd': 26, 'lemma': '?', 'word': '?', 'characterOffsetBegin': 25, 'after': '', 'originalText': '?', 'ner': 'O', 'before': '', 'index': 6}], 'basicDependencies': [{'dependentGloss': 'wrote', 'dep': 'ROOT', 'governor': 0, 'dependent': 2, 'governorGloss': 'ROOT'}, {'dependentGloss': 'Who', 'dep': 'nsubj', 'governor': 2, 'dependent': 1, 'governorGloss': 'wrote'}, {'dependentGloss': 'foo10', 'dep': 'dobj', 'governor': 2, 'dependent': 3, 'governorGloss': 'wrote'}, {'dependentGloss': 'and', 'dep': 'cc', 'governor': 3, 'dependent': 4, 'governorGloss': 'foo10'}, {'dependentGloss': 'foo46', 'dep': 'conj', 'governor': 3, 'dependent': 5, 'governorGloss': 'foo10'}, {'dependentGloss': '?', 'dep': 'punct', 'governor': 2, 'dependent': 6, 'governorGloss': 'wrote'}], 'collapsed-ccprocessed-dependencies': [{'dependentGloss': 'wrote', 'dep': 'ROOT', 'governor': 0, 'dependent': 2, 'governorGloss': 'ROOT'}, {'dependentGloss': 'Who', 'dep': 'nsubj', 'governor': 2, 'dependent': 1, 'governorGloss': 'wrote'}, {'dependentGloss': 'foo10', 'dep': 'dobj', 'governor': 2, 'dependent': 3, 'governorGloss': 'wrote'}, {'dependentGloss': 'and', 'dep': 'cc', 'governor': 3, 'dependent': 4, 'governorGloss': 'foo10'}, {'dependentGloss': 'foo46', 'dep': 'dobj', 'governor': 2, 'dependent': 5, 'governorGloss': 'wrote'}, {'dependentGloss': 'foo46', 'dep': 'conj:and', 'governor': 3, 'dependent': 5, 'governorGloss': 'foo10'}, {'dependentGloss': '?', 'dep': 'punct', 'governor': 2, 'dependent': 6, 'governorGloss': 'wrote'}], 'text': 'Who wrote foo10 and foo46?', 'collapsed-dependencies': [{'dependentGloss': 'wrote', 'dep': 'ROOT', 'governor': 0, 'dependent': 2, 'governorGloss': 'ROOT'}, {'dependentGloss': 'Who', 'dep': 'nsubj', 'governor': 2, 'dependent': 1, 'governorGloss': 'wrote'}, {'dependentGloss': 'foo10', 'dep': 'dobj', 'governor': 2, 'dependent': 3, 'governorGloss': 'wrote'}, {'dependentGloss': 'and', 'dep': 'cc', 'governor': 3, 'dependent': 4, 'governorGloss': 'foo10'}, {'dependentGloss': 'foo46', 'dep': 'conj:and', 'governor': 3, 'dependent': 5, 'governorGloss': 'foo10'}, {'dependentGloss': '?', 'dep': 'punct', 'governor': 2, 'dependent': 6, 'governorGloss': 'wrote'}], 'parse': '(ROOT\n  (SBARQ\n    (WHNP (WP Who))\n    (SQ\n      (VP (VBD wrote)\n        (NP (NN foo10)\n          (CC and)\n          (NN foo46))))\n    (. ?)))', 'index': 0}

# Parse result of "Obama is the United States president."
def give_obama_president_usa():
    return {'parse': '(ROOT\n  (S\n    (NP (NNP Obama))\n    (VP (VBZ is)\n      (NP (DT the) (NNP United) (NNPS States) (NN president)))\n    (. .)))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'Obama', 'dependent': 1}, {'governor': 6, 'dep': 'det', 'governorGloss': 'president', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 6, 'dep': 'compound', 'governorGloss': 'president', 'dependentGloss': 'United', 'dependent': 4}, {'governor': 6, 'dep': 'compound', 'governorGloss': 'president', 'dependentGloss': 'States', 'dependent': 5}, {'governor': 2, 'dep': 'xcomp', 'governorGloss': 'is', 'dependentGloss': 'president', 'dependent': 6}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '.', 'dependent': 7}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'Obama', 'dependent': 1}, {'governor': 6, 'dep': 'det', 'governorGloss': 'president', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 6, 'dep': 'compound', 'governorGloss': 'president', 'dependentGloss': 'United', 'dependent': 4}, {'governor': 6, 'dep': 'compound', 'governorGloss': 'president', 'dependentGloss': 'States', 'dependent': 5}, {'governor': 2, 'dep': 'xcomp', 'governorGloss': 'is', 'dependentGloss': 'president', 'dependent': 6}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '.', 'dependent': 7}], 'tokens': [{'originalText': 'Obama', 'characterOffsetEnd': 5, 'pos': 'NNP', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'Obama', 'word': 'Obama', 'ner': 'PERSON'}, {'originalText': 'is', 'characterOffsetEnd': 8, 'pos': 'VBZ', 'characterOffsetBegin': 6, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'be', 'word': 'is', 'ner': 'O'}, {'originalText': 'the', 'characterOffsetEnd': 12, 'pos': 'DT', 'characterOffsetBegin': 9, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'the', 'word': 'the', 'ner': 'O'}, {'originalText': 'United', 'characterOffsetEnd': 19, 'pos': 'NNP', 'characterOffsetBegin': 13, 'index': 4, 'after': ' ', 'before': ' ', 'lemma': 'United', 'word': 'United', 'ner': 'LOCATION'}, {'originalText': 'States', 'characterOffsetEnd': 26, 'pos': 'NNPS', 'characterOffsetBegin': 20, 'index': 5, 'after': ' ', 'before': ' ', 'lemma': 'States', 'word': 'States', 'ner': 'LOCATION'}, {'originalText': 'president', 'characterOffsetEnd': 36, 'pos': 'NN', 'characterOffsetBegin': 27, 'index': 6, 'after': '', 'before': ' ', 'lemma': 'president', 'word': 'president', 'ner': 'O'}, {'originalText': '.', 'characterOffsetEnd': 37, 'pos': '.', 'characterOffsetBegin': 36, 'index': 7, 'after': '', 'before': '', 'lemma': '.', 'word': '.', 'ner': 'O'}], 'text': 'Obama is the United States president.', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'Obama', 'dependent': 1}, {'governor': 6, 'dep': 'det', 'governorGloss': 'president', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 6, 'dep': 'compound', 'governorGloss': 'president', 'dependentGloss': 'United', 'dependent': 4}, {'governor': 6, 'dep': 'compound', 'governorGloss': 'president', 'dependentGloss': 'States', 'dependent': 5}, {'governor': 2, 'dep': 'xcomp', 'governorGloss': 'is', 'dependentGloss': 'president', 'dependent': 6}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '.', 'dependent': 7}]}

# Parsing result of "How old are there?"
def give_how_old():
    return {'parse': '(ROOT\n  (SBARQ\n    (WHADJP (WRB How) (JJ old))\n    (SQ (VBP are)\n      (NP (EX there)))\n    (. ?)))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'are', 'dependent': 3}, {'governor': 2, 'dep': 'advmod', 'governorGloss': 'old', 'dependentGloss': 'How', 'dependent': 1}, {'governor': 3, 'dep': 'dep', 'governorGloss': 'are', 'dependentGloss': 'old', 'dependent': 2}, {'governor': 3, 'dep': 'expl', 'governorGloss': 'are', 'dependentGloss': 'there', 'dependent': 4}, {'governor': 3, 'dep': 'punct', 'governorGloss': 'are', 'dependentGloss': '?', 'dependent': 5}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'are', 'dependent': 3}, {'governor': 2, 'dep': 'advmod', 'governorGloss': 'old', 'dependentGloss': 'How', 'dependent': 1}, {'governor': 3, 'dep': 'dep', 'governorGloss': 'are', 'dependentGloss': 'old', 'dependent': 2}, {'governor': 3, 'dep': 'expl', 'governorGloss': 'are', 'dependentGloss': 'there', 'dependent': 4}, {'governor': 3, 'dep': 'punct', 'governorGloss': 'are', 'dependentGloss': '?', 'dependent': 5}], 'tokens': [{'originalText': 'How', 'characterOffsetEnd': 3, 'pos': 'WRB', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'how', 'word': 'How', 'ner': 'O'}, {'originalText': 'old', 'characterOffsetEnd': 7, 'pos': 'JJ', 'characterOffsetBegin': 4, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'old', 'word': 'old', 'ner': 'O'}, {'originalText': 'are', 'characterOffsetEnd': 11, 'pos': 'VBP', 'characterOffsetBegin': 8, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'be', 'word': 'are', 'ner': 'O'}, {'originalText': 'there', 'characterOffsetEnd': 17, 'pos': 'EX', 'characterOffsetBegin': 12, 'index': 4, 'after': '', 'before': ' ', 'lemma': 'there', 'word': 'there', 'ner': 'O'}, {'originalText': '?', 'characterOffsetEnd': 18, 'pos': '.', 'characterOffsetBegin': 17, 'index': 5, 'after': '', 'before': '', 'lemma': '?', 'word': '?', 'ner': 'O'}], 'text': 'How old are there?', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'are', 'dependent': 3}, {'governor': 2, 'dep': 'advmod', 'governorGloss': 'old', 'dependentGloss': 'How', 'dependent': 1}, {'governor': 3, 'dep': 'dep', 'governorGloss': 'are', 'dependentGloss': 'old', 'dependent': 2}, {'governor': 3, 'dep': 'expl', 'governorGloss': 'are', 'dependentGloss': 'there', 'dependent': 4}, {'governor': 3, 'dep': 'punct', 'governorGloss': 'are', 'dependentGloss': '?', 'dependent': 5}]}

# Parsing result of "Who is the United States president?"
def give_USA_president():
    return {'parse': '(ROOT\n  (SBARQ\n    (WHNP (WP Who))\n    (SQ (VBZ is)\n      (NP (DT the) (NNP United) (NNPS States) (NN president)))\n    (. ?)))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'Who', 'dependent': 1}, {'governor': 6, 'dep': 'det', 'governorGloss': 'president', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 6, 'dep': 'compound', 'governorGloss': 'president', 'dependentGloss': 'United', 'dependent': 4}, {'governor': 6, 'dep': 'compound', 'governorGloss': 'president', 'dependentGloss': 'States', 'dependent': 5}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'president', 'dependent': 6}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 7}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'Who', 'dependent': 1}, {'governor': 6, 'dep': 'det', 'governorGloss': 'president', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 6, 'dep': 'compound', 'governorGloss': 'president', 'dependentGloss': 'United', 'dependent': 4}, {'governor': 6, 'dep': 'compound', 'governorGloss': 'president', 'dependentGloss': 'States', 'dependent': 5}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'president', 'dependent': 6}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 7}], 'tokens': [{'originalText': 'Who', 'characterOffsetEnd': 3, 'pos': 'WP', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'who', 'word': 'Who', 'ner': 'O'}, {'originalText': 'is', 'characterOffsetEnd': 6, 'pos': 'VBZ', 'characterOffsetBegin': 4, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'be', 'word': 'is', 'ner': 'O'}, {'originalText': 'the', 'characterOffsetEnd': 10, 'pos': 'DT', 'characterOffsetBegin': 7, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'the', 'word': 'the', 'ner': 'O'}, {'originalText': 'United', 'characterOffsetEnd': 17, 'pos': 'NNP', 'characterOffsetBegin': 11, 'index': 4, 'after': ' ', 'before': ' ', 'lemma': 'United', 'word': 'United', 'ner': 'LOCATION'}, {'originalText': 'States', 'characterOffsetEnd': 24, 'pos': 'NNPS', 'characterOffsetBegin': 18, 'index': 5, 'after': ' ', 'before': ' ', 'lemma': 'States', 'word': 'States', 'ner': 'LOCATION'}, {'originalText': 'president', 'characterOffsetEnd': 34, 'pos': 'NN', 'characterOffsetBegin': 25, 'index': 6, 'after': '', 'before': ' ', 'lemma': 'president', 'word': 'president', 'ner': 'O'}, {'originalText': '?', 'characterOffsetEnd': 35, 'pos': '.', 'characterOffsetBegin': 34, 'index': 7, 'after': '', 'before': '', 'lemma': '?', 'word': '?', 'ner': 'O'}], 'text': 'Who is the United States president?', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'Who', 'dependent': 1}, {'governor': 6, 'dep': 'det', 'governorGloss': 'president', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 6, 'dep': 'compound', 'governorGloss': 'president', 'dependentGloss': 'United', 'dependent': 4}, {'governor': 6, 'dep': 'compound', 'governorGloss': 'president', 'dependentGloss': 'States', 'dependent': 5}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'president', 'dependent': 6}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 7}]}

# Parsing result of "Who is the president of the United States?"
def give_president_of_USA():
    return {'parse': '(ROOT\n  (SBARQ\n    (WHNP (WP Who))\n    (SQ (VBZ is)\n      (NP\n        (NP (DT the) (NN president))\n        (PP (IN of)\n          (NP (DT the) (NNP United) (NNPS States)))))\n    (. ?)))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'Who', 'dependent': 1}, {'governor': 4, 'dep': 'det', 'governorGloss': 'president', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'president', 'dependent': 4}, {'governor': 8, 'dep': 'case', 'governorGloss': 'States', 'dependentGloss': 'of', 'dependent': 5}, {'governor': 8, 'dep': 'det', 'governorGloss': 'States', 'dependentGloss': 'the', 'dependent': 6}, {'governor': 8, 'dep': 'compound', 'governorGloss': 'States', 'dependentGloss': 'United', 'dependent': 7}, {'governor': 4, 'dep': 'nmod', 'governorGloss': 'president', 'dependentGloss': 'States', 'dependent': 8}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 9}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'Who', 'dependent': 1}, {'governor': 4, 'dep': 'det', 'governorGloss': 'president', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'president', 'dependent': 4}, {'governor': 8, 'dep': 'case', 'governorGloss': 'States', 'dependentGloss': 'of', 'dependent': 5}, {'governor': 8, 'dep': 'det', 'governorGloss': 'States', 'dependentGloss': 'the', 'dependent': 6}, {'governor': 8, 'dep': 'compound', 'governorGloss': 'States', 'dependentGloss': 'United', 'dependent': 7}, {'governor': 4, 'dep': 'nmod:of', 'governorGloss': 'president', 'dependentGloss': 'States', 'dependent': 8}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 9}], 'tokens': [{'originalText': 'Who', 'characterOffsetEnd': 3, 'pos': 'WP', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'who', 'word': 'Who', 'ner': 'O'}, {'originalText': 'is', 'characterOffsetEnd': 6, 'pos': 'VBZ', 'characterOffsetBegin': 4, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'be', 'word': 'is', 'ner': 'O'}, {'originalText': 'the', 'characterOffsetEnd': 10, 'pos': 'DT', 'characterOffsetBegin': 7, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'the', 'word': 'the', 'ner': 'O'}, {'originalText': 'president', 'characterOffsetEnd': 20, 'pos': 'NN', 'characterOffsetBegin': 11, 'index': 4, 'after': ' ', 'before': ' ', 'lemma': 'president', 'word': 'president', 'ner': 'O'}, {'originalText': 'of', 'characterOffsetEnd': 23, 'pos': 'IN', 'characterOffsetBegin': 21, 'index': 5, 'after': ' ', 'before': ' ', 'lemma': 'of', 'word': 'of', 'ner': 'O'}, {'originalText': 'the', 'characterOffsetEnd': 27, 'pos': 'DT', 'characterOffsetBegin': 24, 'index': 6, 'after': ' ', 'before': ' ', 'lemma': 'the', 'word': 'the', 'ner': 'O'}, {'originalText': 'United', 'characterOffsetEnd': 34, 'pos': 'NNP', 'characterOffsetBegin': 28, 'index': 7, 'after': ' ', 'before': ' ', 'lemma': 'United', 'word': 'United', 'ner': 'LOCATION'}, {'originalText': 'States', 'characterOffsetEnd': 41, 'pos': 'NNPS', 'characterOffsetBegin': 35, 'index': 8, 'after': '', 'before': ' ', 'lemma': 'States', 'word': 'States', 'ner': 'LOCATION'}, {'originalText': '?', 'characterOffsetEnd': 42, 'pos': '.', 'characterOffsetBegin': 41, 'index': 9, 'after': '', 'before': '', 'lemma': '?', 'word': '?', 'ner': 'O'}], 'text': 'Who is the president of the United States?', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'Who', 'dependent': 1}, {'governor': 4, 'dep': 'det', 'governorGloss': 'president', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'president', 'dependent': 4}, {'governor': 8, 'dep': 'case', 'governorGloss': 'States', 'dependentGloss': 'of', 'dependent': 5}, {'governor': 8, 'dep': 'det', 'governorGloss': 'States', 'dependentGloss': 'the', 'dependent': 6}, {'governor': 8, 'dep': 'compound', 'governorGloss': 'States', 'dependentGloss': 'United', 'dependent': 7}, {'governor': 4, 'dep': 'nmod:of', 'governorGloss': 'president', 'dependentGloss': 'States', 'dependent': 8}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 9}]}

# Parsing result of "What was the first Gilbert and Sullivan opera?"
def give_opera():
    return {'parse': '(ROOT\n  (SBARQ\n    (WHNP (WP What))\n    (SQ (VBD was)\n      (NP (DT the) (JJ first) (NNP Gilbert)\n        (CC and)\n        (NNP Sullivan) (NN opera)))\n    (. ?)))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'was', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'was', 'dependentGloss': 'What', 'dependent': 1}, {'governor': 5, 'dep': 'det', 'governorGloss': 'Gilbert', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 5, 'dep': 'amod', 'governorGloss': 'Gilbert', 'dependentGloss': 'first', 'dependent': 4}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'was', 'dependentGloss': 'Gilbert', 'dependent': 5}, {'governor': 5, 'dep': 'cc', 'governorGloss': 'Gilbert', 'dependentGloss': 'and', 'dependent': 6}, {'governor': 8, 'dep': 'compound', 'governorGloss': 'opera', 'dependentGloss': 'Sullivan', 'dependent': 7}, {'governor': 5, 'dep': 'conj', 'governorGloss': 'Gilbert', 'dependentGloss': 'opera', 'dependent': 8}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'was', 'dependentGloss': '?', 'dependent': 9}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'was', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'was', 'dependentGloss': 'What', 'dependent': 1}, {'governor': 5, 'dep': 'det', 'governorGloss': 'Gilbert', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 5, 'dep': 'amod', 'governorGloss': 'Gilbert', 'dependentGloss': 'first', 'dependent': 4}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'was', 'dependentGloss': 'Gilbert', 'dependent': 5}, {'governor': 5, 'dep': 'cc', 'governorGloss': 'Gilbert', 'dependentGloss': 'and', 'dependent': 6}, {'governor': 8, 'dep': 'compound', 'governorGloss': 'opera', 'dependentGloss': 'Sullivan', 'dependent': 7}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'was', 'dependentGloss': 'opera', 'dependent': 8}, {'governor': 5, 'dep': 'conj:and', 'governorGloss': 'Gilbert', 'dependentGloss': 'opera', 'dependent': 8}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'was', 'dependentGloss': '?', 'dependent': 9}], 'tokens': [{'originalText': 'What', 'characterOffsetEnd': 4, 'pos': 'WP', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'what', 'word': 'What', 'ner': 'O'}, {'originalText': 'was', 'characterOffsetEnd': 8, 'pos': 'VBD', 'characterOffsetBegin': 5, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'be', 'word': 'was', 'ner': 'O'}, {'originalText': 'the', 'characterOffsetEnd': 12, 'pos': 'DT', 'characterOffsetBegin': 9, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'the', 'word': 'the', 'ner': 'O'}, {'originalText': 'first', 'characterOffsetEnd': 18, 'pos': 'JJ', 'characterOffsetBegin': 13, 'index': 4, 'normalizedNER': '1.0', 'before': ' ', 'after': ' ', 'lemma': 'first', 'word': 'first', 'ner': 'ORDINAL'}, {'originalText': 'Gilbert', 'characterOffsetEnd': 26, 'pos': 'NNP', 'characterOffsetBegin': 19, 'index': 5, 'after': ' ', 'before': ' ', 'lemma': 'Gilbert', 'word': 'Gilbert', 'ner': 'PERSON'}, {'originalText': 'and', 'characterOffsetEnd': 30, 'pos': 'CC', 'characterOffsetBegin': 27, 'index': 6, 'after': ' ', 'before': ' ', 'lemma': 'and', 'word': 'and', 'ner': 'O'}, {'originalText': 'Sullivan', 'characterOffsetEnd': 39, 'pos': 'NNP', 'characterOffsetBegin': 31, 'index': 7, 'after': ' ', 'before': ' ', 'lemma': 'Sullivan', 'word': 'Sullivan', 'ner': 'PERSON'}, {'originalText': 'opera', 'characterOffsetEnd': 45, 'pos': 'NN', 'characterOffsetBegin': 40, 'index': 8, 'after': '', 'before': ' ', 'lemma': 'opera', 'word': 'opera', 'ner': 'O'}, {'originalText': '?', 'characterOffsetEnd': 46, 'pos': '.', 'characterOffsetBegin': 45, 'index': 9, 'after': '', 'before': '', 'lemma': '?', 'word': '?', 'ner': 'O'}], 'text': 'What was the first Gilbert and Sullivan opera?', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'was', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'was', 'dependentGloss': 'What', 'dependent': 1}, {'governor': 5, 'dep': 'det', 'governorGloss': 'Gilbert', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 5, 'dep': 'amod', 'governorGloss': 'Gilbert', 'dependentGloss': 'first', 'dependent': 4}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'was', 'dependentGloss': 'Gilbert', 'dependent': 5}, {'governor': 5, 'dep': 'cc', 'governorGloss': 'Gilbert', 'dependentGloss': 'and', 'dependent': 6}, {'governor': 8, 'dep': 'compound', 'governorGloss': 'opera', 'dependentGloss': 'Sullivan', 'dependent': 7}, {'governor': 5, 'dep': 'conj:and', 'governorGloss': 'Gilbert', 'dependentGloss': 'opera', 'dependent': 8}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'was', 'dependentGloss': '?', 'dependent': 9}]}

# Parsing result of "Who is the chief and prime minister?"
def give_chief():
    return {'parse': '(ROOT\n  (SBARQ\n    (WHNP (WP Who))\n    (SQ (VBZ is)\n      (NP\n        (NP (DT the) (NN chief))\n        (CC and)\n        (NP (JJ prime) (NN minister))))\n    (. ?)))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'Who', 'dependent': 1}, {'governor': 4, 'dep': 'det', 'governorGloss': 'chief', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'chief', 'dependent': 4}, {'governor': 4, 'dep': 'cc', 'governorGloss': 'chief', 'dependentGloss': 'and', 'dependent': 5}, {'governor': 7, 'dep': 'amod', 'governorGloss': 'minister', 'dependentGloss': 'prime', 'dependent': 6}, {'governor': 4, 'dep': 'conj', 'governorGloss': 'chief', 'dependentGloss': 'minister', 'dependent': 7}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 8}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'Who', 'dependent': 1}, {'governor': 4, 'dep': 'det', 'governorGloss': 'chief', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'chief', 'dependent': 4}, {'governor': 4, 'dep': 'cc', 'governorGloss': 'chief', 'dependentGloss': 'and', 'dependent': 5}, {'governor': 7, 'dep': 'amod', 'governorGloss': 'minister', 'dependentGloss': 'prime', 'dependent': 6}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'minister', 'dependent': 7}, {'governor': 4, 'dep': 'conj:and', 'governorGloss': 'chief', 'dependentGloss': 'minister', 'dependent': 7}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 8}], 'tokens': [{'originalText': 'Who', 'characterOffsetEnd': 3, 'pos': 'WP', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'who', 'word': 'Who', 'ner': 'O'}, {'originalText': 'is', 'characterOffsetEnd': 6, 'pos': 'VBZ', 'characterOffsetBegin': 4, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'be', 'word': 'is', 'ner': 'O'}, {'originalText': 'the', 'characterOffsetEnd': 10, 'pos': 'DT', 'characterOffsetBegin': 7, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'the', 'word': 'the', 'ner': 'O'}, {'originalText': 'chief', 'characterOffsetEnd': 16, 'pos': 'NN', 'characterOffsetBegin': 11, 'index': 4, 'after': ' ', 'before': ' ', 'lemma': 'chief', 'word': 'chief', 'ner': 'O'}, {'originalText': 'and', 'characterOffsetEnd': 20, 'pos': 'CC', 'characterOffsetBegin': 17, 'index': 5, 'after': ' ', 'before': ' ', 'lemma': 'and', 'word': 'and', 'ner': 'O'}, {'originalText': 'prime', 'characterOffsetEnd': 26, 'pos': 'JJ', 'characterOffsetBegin': 21, 'index': 6, 'after': ' ', 'before': ' ', 'lemma': 'prime', 'word': 'prime', 'ner': 'O'}, {'originalText': 'minister', 'characterOffsetEnd': 35, 'pos': 'NN', 'characterOffsetBegin': 27, 'index': 7, 'after': '', 'before': ' ', 'lemma': 'minister', 'word': 'minister', 'ner': 'O'}, {'originalText': '?', 'characterOffsetEnd': 36, 'pos': '.', 'characterOffsetBegin': 35, 'index': 8, 'after': '', 'before': '', 'lemma': '?', 'word': '?', 'ner': 'O'}], 'text': 'Who is the chief and prime minister?', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'Who', 'dependent': 1}, {'governor': 4, 'dep': 'det', 'governorGloss': 'chief', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'chief', 'dependent': 4}, {'governor': 4, 'dep': 'cc', 'governorGloss': 'chief', 'dependentGloss': 'and', 'dependent': 5}, {'governor': 7, 'dep': 'amod', 'governorGloss': 'minister', 'dependentGloss': 'prime', 'dependent': 6}, {'governor': 4, 'dep': 'conj:and', 'governorGloss': 'chief', 'dependentGloss': 'minister', 'dependent': 7}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 8}]}

# Parsing result of "Is born in 1900"
def give_born():
    return {'parse': '(ROOT\n  (FRAG\n    (VP (VBZ Is)\n      (VP (VBN born)\n        (PP (IN in)\n          (NP (CD 1900)))))))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'born', 'dependent': 2}, {'governor': 2, 'dep': 'auxpass', 'governorGloss': 'born', 'dependentGloss': 'Is', 'dependent': 1}, {'governor': 4, 'dep': 'case', 'governorGloss': '1900', 'dependentGloss': 'in', 'dependent': 3}, {'governor': 2, 'dep': 'nmod', 'governorGloss': 'born', 'dependentGloss': '1900', 'dependent': 4}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'born', 'dependent': 2}, {'governor': 2, 'dep': 'auxpass', 'governorGloss': 'born', 'dependentGloss': 'Is', 'dependent': 1}, {'governor': 4, 'dep': 'case', 'governorGloss': '1900', 'dependentGloss': 'in', 'dependent': 3}, {'governor': 2, 'dep': 'nmod:in', 'governorGloss': 'born', 'dependentGloss': '1900', 'dependent': 4}], 'tokens': [{'originalText': 'Is', 'characterOffsetEnd': 2, 'pos': 'VBZ', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'be', 'word': 'Is', 'ner': 'O'}, {'originalText': 'born', 'characterOffsetEnd': 7, 'pos': 'VBN', 'characterOffsetBegin': 3, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'bear', 'word': 'born', 'ner': 'O'}, {'originalText': 'in', 'characterOffsetEnd': 10, 'pos': 'IN', 'characterOffsetBegin': 8, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'in', 'word': 'in', 'ner': 'O'}, {'originalText': '1900', 'characterOffsetEnd': 15, 'pos': 'CD', 'characterOffsetBegin': 11, 'index': 4, 'normalizedNER': '1900', 'before': ' ', 'after': '', 'lemma': '1900', 'word': '1900', 'ner': 'DATE'}], 'text': 'Is born in 1900', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'born', 'dependent': 2}, {'governor': 2, 'dep': 'auxpass', 'governorGloss': 'born', 'dependentGloss': 'Is', 'dependent': 1}, {'governor': 4, 'dep': 'case', 'governorGloss': '1900', 'dependentGloss': 'in', 'dependent': 3}, {'governor': 2, 'dep': 'nmod:in', 'governorGloss': 'born', 'dependentGloss': '1900', 'dependent': 4}]}

# Parsing result of "President of France"
def birth_date():
    return {'parse': '(ROOT\n  (NP\n    (NP (NNP President))\n    (PP (IN of)\n      (NP (NNP France)))))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'President', 'dependent': 1}, {'governor': 3, 'dep': 'case', 'governorGloss': 'France', 'dependentGloss': 'of', 'dependent': 2}, {'governor': 1, 'dep': 'nmod', 'governorGloss': 'President', 'dependentGloss': 'France', 'dependent': 3}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'President', 'dependent': 1}, {'governor': 3, 'dep': 'case', 'governorGloss': 'France', 'dependentGloss': 'of', 'dependent': 2}, {'governor': 1, 'dep': 'nmod:of', 'governorGloss': 'President', 'dependentGloss': 'France', 'dependent': 3}], 'tokens': [{'originalText': 'President', 'characterOffsetEnd': 9, 'pos': 'NNP', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'President', 'word': 'President', 'ner': 'O'}, {'originalText': 'of', 'characterOffsetEnd': 12, 'pos': 'IN', 'characterOffsetBegin': 10, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'of', 'word': 'of', 'ner': 'O'}, {'originalText': 'France', 'characterOffsetEnd': 19, 'pos': 'NNP', 'characterOffsetBegin': 13, 'index': 3, 'after': '', 'before': ' ', 'lemma': 'France', 'word': 'France', 'ner': 'LOCATION'}], 'text': 'President of France', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'President', 'dependent': 1}, {'governor': 3, 'dep': 'case', 'governorGloss': 'France', 'dependentGloss': 'of', 'dependent': 2}, {'governor': 1, 'dep': 'nmod:of', 'governorGloss': 'President', 'dependentGloss': 'France', 'dependent': 3}]}

# Parsing result of "When is born Obama?"
def birth_place():
    return {'parse': '(ROOT\n  (SBARQ\n    (WHADVP (WRB When))\n    (SQ (VBZ is)\n      (VP (VBN born)\n        (NP (NNP Obama))))\n    (. ?)))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'born', 'dependent': 3}, {'governor': 3, 'dep': 'advmod', 'governorGloss': 'born', 'dependentGloss': 'When', 'dependent': 1}, {'governor': 3, 'dep': 'auxpass', 'governorGloss': 'born', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 3, 'dep': 'dobj', 'governorGloss': 'born', 'dependentGloss': 'Obama', 'dependent': 4}, {'governor': 3, 'dep': 'punct', 'governorGloss': 'born', 'dependentGloss': '?', 'dependent': 5}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'born', 'dependent': 3}, {'governor': 3, 'dep': 'advmod', 'governorGloss': 'born', 'dependentGloss': 'When', 'dependent': 1}, {'governor': 3, 'dep': 'auxpass', 'governorGloss': 'born', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 3, 'dep': 'dobj', 'governorGloss': 'born', 'dependentGloss': 'Obama', 'dependent': 4}, {'governor': 3, 'dep': 'punct', 'governorGloss': 'born', 'dependentGloss': '?', 'dependent': 5}], 'tokens': [{'originalText': 'When', 'characterOffsetEnd': 4, 'pos': 'WRB', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'when', 'word': 'When', 'ner': 'O'}, {'originalText': 'is', 'characterOffsetEnd': 7, 'pos': 'VBZ', 'characterOffsetBegin': 5, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'be', 'word': 'is', 'ner': 'O'}, {'originalText': 'born', 'characterOffsetEnd': 12, 'pos': 'VBN', 'characterOffsetBegin': 8, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'bear', 'word': 'born', 'ner': 'O'}, {'originalText': 'Obama', 'characterOffsetEnd': 18, 'pos': 'NNP', 'characterOffsetBegin': 13, 'index': 4, 'after': '', 'before': ' ', 'lemma': 'Obama', 'word': 'Obama', 'ner': 'PERSON'}, {'originalText': '?', 'characterOffsetEnd': 19, 'pos': '.', 'characterOffsetBegin': 18, 'index': 5, 'after': '', 'before': '', 'lemma': '?', 'word': '?', 'ner': 'O'}], 'text': 'When is born Obama?', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'born', 'dependent': 3}, {'governor': 3, 'dep': 'advmod', 'governorGloss': 'born', 'dependentGloss': 'When', 'dependent': 1}, {'governor': 3, 'dep': 'auxpass', 'governorGloss': 'born', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 3, 'dep': 'dobj', 'governorGloss': 'born', 'dependentGloss': 'Obama', 'dependent': 4}, {'governor': 3, 'dep': 'punct', 'governorGloss': 'born', 'dependentGloss': '?', 'dependent': 5}]}

# Parsing result of "Where is the mistake the mistake?"
def mistake():
    return {'parse': '(ROOT\n  (SBARQ\n    (WHADVP (WRB Where))\n    (SQ (VBZ is)\n      (NP (DT the) (NN mistake)\n        (NP (DT the) (NN mistake))))\n    (. ?)))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'advmod', 'governorGloss': 'is', 'dependentGloss': 'Where', 'dependent': 1}, {'governor': 4, 'dep': 'det', 'governorGloss': 'mistake', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'mistake', 'dependent': 4}, {'governor': 6, 'dep': 'det', 'governorGloss': 'mistake', 'dependentGloss': 'the', 'dependent': 5}, {'governor': 4, 'dep': 'dep', 'governorGloss': 'mistake', 'dependentGloss': 'mistake', 'dependent': 6}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 7}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'advmod', 'governorGloss': 'is', 'dependentGloss': 'Where', 'dependent': 1}, {'governor': 4, 'dep': 'det', 'governorGloss': 'mistake', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'mistake', 'dependent': 4}, {'governor': 6, 'dep': 'det', 'governorGloss': 'mistake', 'dependentGloss': 'the', 'dependent': 5}, {'governor': 4, 'dep': 'dep', 'governorGloss': 'mistake', 'dependentGloss': 'mistake', 'dependent': 6}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 7}], 'tokens': [{'originalText': 'Where', 'characterOffsetEnd': 5, 'pos': 'WRB', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'where', 'word': 'Where', 'ner': 'O'}, {'originalText': 'is', 'characterOffsetEnd': 8, 'pos': 'VBZ', 'characterOffsetBegin': 6, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'be', 'word': 'is', 'ner': 'O'}, {'originalText': 'the', 'characterOffsetEnd': 12, 'pos': 'DT', 'characterOffsetBegin': 9, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'the', 'word': 'the', 'ner': 'O'}, {'originalText': 'mistake', 'characterOffsetEnd': 20, 'pos': 'NN', 'characterOffsetBegin': 13, 'index': 4, 'after': ' ', 'before': ' ', 'lemma': 'mistake', 'word': 'mistake', 'ner': 'O'}, {'originalText': 'the', 'characterOffsetEnd': 24, 'pos': 'DT', 'characterOffsetBegin': 21, 'index': 5, 'after': ' ', 'before': ' ', 'lemma': 'the', 'word': 'the', 'ner': 'O'}, {'originalText': 'mistake', 'characterOffsetEnd': 32, 'pos': 'NN', 'characterOffsetBegin': 25, 'index': 6, 'after': '', 'before': ' ', 'lemma': 'mistake', 'word': 'mistake', 'ner': 'O'}, {'originalText': '?', 'characterOffsetEnd': 33, 'pos': '.', 'characterOffsetBegin': 32, 'index': 7, 'after': '', 'before': '', 'lemma': '?', 'word': '?', 'ner': 'O'}], 'text': 'Where is the mistake the mistake?', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'advmod', 'governorGloss': 'is', 'dependentGloss': 'Where', 'dependent': 1}, {'governor': 4, 'dep': 'det', 'governorGloss': 'mistake', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'mistake', 'dependent': 4}, {'governor': 6, 'dep': 'det', 'governorGloss': 'mistake', 'dependentGloss': 'the', 'dependent': 5}, {'governor': 4, 'dep': 'dep', 'governorGloss': 'mistake', 'dependentGloss': 'mistake', 'dependent': 6}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 7}]}

# Parsing result of "What is the highest mountain of Tanzania?"
def tanzania():
    return {'parse': '(ROOT\n  (SBARQ\n    (WHNP (WP What))\n    (SQ (VBZ is)\n      (NP\n        (NP (DT the) (JJS highest) (NN mountain))\n        (PP (IN of)\n          (NP (NNP Tanzania)))))\n    (. ?)))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'What', 'dependent': 1}, {'governor': 5, 'dep': 'det', 'governorGloss': 'mountain', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 5, 'dep': 'amod', 'governorGloss': 'mountain', 'dependentGloss': 'highest', 'dependent': 4}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'mountain', 'dependent': 5}, {'governor': 7, 'dep': 'case', 'governorGloss': 'Tanzania', 'dependentGloss': 'of', 'dependent': 6}, {'governor': 5, 'dep': 'nmod', 'governorGloss': 'mountain', 'dependentGloss': 'Tanzania', 'dependent': 7}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 8}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'What', 'dependent': 1}, {'governor': 5, 'dep': 'det', 'governorGloss': 'mountain', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 5, 'dep': 'amod', 'governorGloss': 'mountain', 'dependentGloss': 'highest', 'dependent': 4}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'mountain', 'dependent': 5}, {'governor': 7, 'dep': 'case', 'governorGloss': 'Tanzania', 'dependentGloss': 'of', 'dependent': 6}, {'governor': 5, 'dep': 'nmod:of', 'governorGloss': 'mountain', 'dependentGloss': 'Tanzania', 'dependent': 7}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 8}], 'tokens': [{'originalText': 'What', 'characterOffsetEnd': 4, 'pos': 'WP', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'what', 'word': 'What', 'ner': 'O'}, {'originalText': 'is', 'characterOffsetEnd': 7, 'pos': 'VBZ', 'characterOffsetBegin': 5, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'be', 'word': 'is', 'ner': 'O'}, {'originalText': 'the', 'characterOffsetEnd': 11, 'pos': 'DT', 'characterOffsetBegin': 8, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'the', 'word': 'the', 'ner': 'O'}, {'originalText': 'highest', 'characterOffsetEnd': 19, 'pos': 'JJS', 'characterOffsetBegin': 12, 'index': 4, 'after': ' ', 'before': ' ', 'lemma': 'highest', 'word': 'highest', 'ner': 'O'}, {'originalText': 'mountain', 'characterOffsetEnd': 28, 'pos': 'NN', 'characterOffsetBegin': 20, 'index': 5, 'after': ' ', 'before': ' ', 'lemma': 'mountain', 'word': 'mountain', 'ner': 'O'}, {'originalText': 'of', 'characterOffsetEnd': 31, 'pos': 'IN', 'characterOffsetBegin': 29, 'index': 6, 'after': ' ', 'before': ' ', 'lemma': 'of', 'word': 'of', 'ner': 'O'}, {'originalText': 'Tanzania', 'characterOffsetEnd': 40, 'pos': 'NNP', 'characterOffsetBegin': 32, 'index': 7, 'after': '', 'before': ' ', 'lemma': 'Tanzania', 'word': 'Tanzania', 'ner': 'LOCATION'}, {'originalText': '?', 'characterOffsetEnd': 41, 'pos': '.', 'characterOffsetBegin': 40, 'index': 8, 'after': '', 'before': '', 'lemma': '?', 'word': '?', 'ner': 'O'}], 'text': 'What is the highest mountain of Tanzania?', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'What', 'dependent': 1}, {'governor': 5, 'dep': 'det', 'governorGloss': 'mountain', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 5, 'dep': 'amod', 'governorGloss': 'mountain', 'dependentGloss': 'highest', 'dependent': 4}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'mountain', 'dependent': 5}, {'governor': 7, 'dep': 'case', 'governorGloss': 'Tanzania', 'dependentGloss': 'of', 'dependent': 6}, {'governor': 5, 'dep': 'nmod:of', 'governorGloss': 'mountain', 'dependentGloss': 'Tanzania', 'dependent': 7}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 8}]}

# Parsing result of "When is the birthday of Mickey Mouse?"
def mickey():
    return {'parse': '(ROOT\n  (SBARQ\n    (WHADVP (WRB When))\n    (SQ (VBZ is)\n      (NP\n        (NP (DT the) (NN birthday))\n        (PP (IN of)\n          (NP (NNP Mickey) (NNP Mouse)))))\n    (. ?)))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'advmod', 'governorGloss': 'is', 'dependentGloss': 'When', 'dependent': 1}, {'governor': 4, 'dep': 'det', 'governorGloss': 'birthday', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'birthday', 'dependent': 4}, {'governor': 7, 'dep': 'case', 'governorGloss': 'Mouse', 'dependentGloss': 'of', 'dependent': 5}, {'governor': 7, 'dep': 'compound', 'governorGloss': 'Mouse', 'dependentGloss': 'Mickey', 'dependent': 6}, {'governor': 4, 'dep': 'nmod', 'governorGloss': 'birthday', 'dependentGloss': 'Mouse', 'dependent': 7}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 8}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'advmod', 'governorGloss': 'is', 'dependentGloss': 'When', 'dependent': 1}, {'governor': 4, 'dep': 'det', 'governorGloss': 'birthday', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'birthday', 'dependent': 4}, {'governor': 7, 'dep': 'case', 'governorGloss': 'Mouse', 'dependentGloss': 'of', 'dependent': 5}, {'governor': 7, 'dep': 'compound', 'governorGloss': 'Mouse', 'dependentGloss': 'Mickey', 'dependent': 6}, {'governor': 4, 'dep': 'nmod:of', 'governorGloss': 'birthday', 'dependentGloss': 'Mouse', 'dependent': 7}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 8}], 'tokens': [{'originalText': 'When', 'characterOffsetEnd': 4, 'pos': 'WRB', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'when', 'word': 'When', 'ner': 'O'}, {'originalText': 'is', 'characterOffsetEnd': 7, 'pos': 'VBZ', 'characterOffsetBegin': 5, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'be', 'word': 'is', 'ner': 'O'}, {'originalText': 'the', 'characterOffsetEnd': 11, 'pos': 'DT', 'characterOffsetBegin': 8, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'the', 'word': 'the', 'ner': 'O'}, {'originalText': 'birthday', 'characterOffsetEnd': 20, 'pos': 'NN', 'characterOffsetBegin': 12, 'index': 4, 'after': ' ', 'before': ' ', 'lemma': 'birthday', 'word': 'birthday', 'ner': 'O'}, {'originalText': 'of', 'characterOffsetEnd': 23, 'pos': 'IN', 'characterOffsetBegin': 21, 'index': 5, 'after': ' ', 'before': ' ', 'lemma': 'of', 'word': 'of', 'ner': 'O'}, {'originalText': 'Mickey', 'characterOffsetEnd': 30, 'pos': 'NNP', 'characterOffsetBegin': 24, 'index': 6, 'after': ' ', 'before': ' ', 'lemma': 'Mickey', 'word': 'Mickey', 'ner': 'PERSON'}, {'originalText': 'Mouse', 'characterOffsetEnd': 36, 'pos': 'NNP', 'characterOffsetBegin': 31, 'index': 7, 'after': '', 'before': ' ', 'lemma': 'Mouse', 'word': 'Mouse', 'ner': 'PERSON'}, {'originalText': '?', 'characterOffsetEnd': 37, 'pos': '.', 'characterOffsetBegin': 36, 'index': 8, 'after': '', 'before': '', 'lemma': '?', 'word': '?', 'ner': 'O'}], 'text': 'When is the birthday of Mickey Mouse?', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'advmod', 'governorGloss': 'is', 'dependentGloss': 'When', 'dependent': 1}, {'governor': 4, 'dep': 'det', 'governorGloss': 'birthday', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'birthday', 'dependent': 4}, {'governor': 7, 'dep': 'case', 'governorGloss': 'Mouse', 'dependentGloss': 'of', 'dependent': 5}, {'governor': 7, 'dep': 'compound', 'governorGloss': 'Mouse', 'dependentGloss': 'Mickey', 'dependent': 6}, {'governor': 4, 'dep': 'nmod:of', 'governorGloss': 'birthday', 'dependentGloss': 'Mouse', 'dependent': 7}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 8}]}

# Parsing result of "What is black and white?"
def black():
    return {'index': 0, 'text': 'What is black and white?', 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'dependent': 3, 'governorGloss': 'ROOT', 'dependentGloss': 'black'}, {'governor': 3, 'dep': 'nsubj', 'dependent': 1, 'governorGloss': 'black', 'dependentGloss': 'What'}, {'governor': 3, 'dep': 'cop', 'dependent': 2, 'governorGloss': 'black', 'dependentGloss': 'is'}, {'governor': 3, 'dep': 'cc', 'dependent': 4, 'governorGloss': 'black', 'dependentGloss': 'and'}, {'governor': 3, 'dep': 'conj:and', 'dependent': 5, 'governorGloss': 'black', 'dependentGloss': 'white'}, {'governor': 3, 'dep': 'punct', 'dependent': 6, 'governorGloss': 'black', 'dependentGloss': '?'}], 'parse': '(ROOT\n  (SBARQ\n    (WHNP (WP What))\n    (SQ (VBZ is)\n      (ADJP (JJ black)\n        (CC and)\n        (JJ white)))\n    (. ?)))', 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'dependent': 3, 'governorGloss': 'ROOT', 'dependentGloss': 'black'}, {'governor': 3, 'dep': 'nsubj', 'dependent': 1, 'governorGloss': 'black', 'dependentGloss': 'What'}, {'governor': 5, 'dep': 'nsubj', 'dependent': 1, 'governorGloss': 'white', 'dependentGloss': 'What'}, {'governor': 3, 'dep': 'cop', 'dependent': 2, 'governorGloss': 'black', 'dependentGloss': 'is'}, {'governor': 3, 'dep': 'cc', 'dependent': 4, 'governorGloss': 'black', 'dependentGloss': 'and'}, {'governor': 3, 'dep': 'conj:and', 'dependent': 5, 'governorGloss': 'black', 'dependentGloss': 'white'}, {'governor': 3, 'dep': 'punct', 'dependent': 6, 'governorGloss': 'black', 'dependentGloss': '?'}], 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'dependent': 3, 'governorGloss': 'ROOT', 'dependentGloss': 'black'}, {'governor': 3, 'dep': 'nsubj', 'dependent': 1, 'governorGloss': 'black', 'dependentGloss': 'What'}, {'governor': 3, 'dep': 'cop', 'dependent': 2, 'governorGloss': 'black', 'dependentGloss': 'is'}, {'governor': 3, 'dep': 'cc', 'dependent': 4, 'governorGloss': 'black', 'dependentGloss': 'and'}, {'governor': 3, 'dep': 'conj', 'dependent': 5, 'governorGloss': 'black', 'dependentGloss': 'white'}, {'governor': 3, 'dep': 'punct', 'dependent': 6, 'governorGloss': 'black', 'dependentGloss': '?'}], 'tokens': [{'lemma': 'what', 'characterOffsetBegin': 0, 'index': 1, 'pos': 'WP', 'characterOffsetEnd': 4, 'after': ' ', 'originalText': 'What', 'word': 'What', 'ner': 'O', 'before': ''}, {'lemma': 'be', 'characterOffsetBegin': 5, 'index': 2, 'pos': 'VBZ', 'characterOffsetEnd': 7, 'after': ' ', 'originalText': 'is', 'word': 'is', 'ner': 'O', 'before': ' '}, {'lemma': 'black', 'characterOffsetBegin': 8, 'index': 3, 'pos': 'JJ', 'characterOffsetEnd': 13, 'after': ' ', 'originalText': 'black', 'word': 'black', 'ner': 'O', 'before': ' '}, {'lemma': 'and', 'characterOffsetBegin': 14, 'index': 4, 'pos': 'CC', 'characterOffsetEnd': 17, 'after': ' ', 'originalText': 'and', 'word': 'and', 'ner': 'O', 'before': ' '}, {'lemma': 'white', 'characterOffsetBegin': 18, 'index': 5, 'pos': 'JJ', 'characterOffsetEnd': 23, 'after': '', 'originalText': 'white', 'word': 'white', 'ner': 'O', 'before': ' '}, {'lemma': '?', 'characterOffsetBegin': 23, 'index': 6, 'pos': '.', 'characterOffsetEnd': 24, 'after': '', 'originalText': '?', 'word': '?', 'ner': 'O', 'before': ''}]}

# Parsing result of "Is there a king of England?"
def king_england():
    return {'parse': '(ROOT\n  (SQ (VBZ Is)\n    (NP (EX there))\n    (NP\n      (NP (DT a) (NN king))\n      (PP (IN of)\n        (NP (NNP England))))\n    (. ?)))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'Is', 'dependent': 1}, {'governor': 1, 'dep': 'expl', 'governorGloss': 'Is', 'dependentGloss': 'there', 'dependent': 2}, {'governor': 4, 'dep': 'det', 'governorGloss': 'king', 'dependentGloss': 'a', 'dependent': 3}, {'governor': 1, 'dep': 'nsubj', 'governorGloss': 'Is', 'dependentGloss': 'king', 'dependent': 4}, {'governor': 6, 'dep': 'case', 'governorGloss': 'England', 'dependentGloss': 'of', 'dependent': 5}, {'governor': 4, 'dep': 'nmod', 'governorGloss': 'king', 'dependentGloss': 'England', 'dependent': 6}, {'governor': 1, 'dep': 'punct', 'governorGloss': 'Is', 'dependentGloss': '?', 'dependent': 7}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'Is', 'dependent': 1}, {'governor': 1, 'dep': 'expl', 'governorGloss': 'Is', 'dependentGloss': 'there', 'dependent': 2}, {'governor': 4, 'dep': 'det', 'governorGloss': 'king', 'dependentGloss': 'a', 'dependent': 3}, {'governor': 1, 'dep': 'nsubj', 'governorGloss': 'Is', 'dependentGloss': 'king', 'dependent': 4}, {'governor': 6, 'dep': 'case', 'governorGloss': 'England', 'dependentGloss': 'of', 'dependent': 5}, {'governor': 4, 'dep': 'nmod:of', 'governorGloss': 'king', 'dependentGloss': 'England', 'dependent': 6}, {'governor': 1, 'dep': 'punct', 'governorGloss': 'Is', 'dependentGloss': '?', 'dependent': 7}], 'tokens': [{'originalText': 'Is', 'characterOffsetEnd': 2, 'pos': 'VBZ', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'be', 'word': 'Is', 'ner': 'O'}, {'originalText': 'there', 'characterOffsetEnd': 8, 'pos': 'EX', 'characterOffsetBegin': 3, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'there', 'word': 'there', 'ner': 'O'}, {'originalText': 'a', 'characterOffsetEnd': 10, 'pos': 'DT', 'characterOffsetBegin': 9, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'a', 'word': 'a', 'ner': 'O'}, {'originalText': 'king', 'characterOffsetEnd': 15, 'pos': 'NN', 'characterOffsetBegin': 11, 'index': 4, 'after': ' ', 'before': ' ', 'lemma': 'king', 'word': 'king', 'ner': 'O'}, {'originalText': 'of', 'characterOffsetEnd': 18, 'pos': 'IN', 'characterOffsetBegin': 16, 'index': 5, 'after': ' ', 'before': ' ', 'lemma': 'of', 'word': 'of', 'ner': 'O'}, {'originalText': 'England', 'characterOffsetEnd': 26, 'pos': 'NNP', 'characterOffsetBegin': 19, 'index': 6, 'after': '', 'before': ' ', 'lemma': 'England', 'word': 'England', 'ner': 'LOCATION'}, {'originalText': '?', 'characterOffsetEnd': 27, 'pos': '.', 'characterOffsetBegin': 26, 'index': 7, 'after': '', 'before': '', 'lemma': '?', 'word': '?', 'ner': 'O'}], 'text': 'Is there a king of England?', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'Is', 'dependent': 1}, {'governor': 1, 'dep': 'expl', 'governorGloss': 'Is', 'dependentGloss': 'there', 'dependent': 2}, {'governor': 4, 'dep': 'det', 'governorGloss': 'king', 'dependentGloss': 'a', 'dependent': 3}, {'governor': 1, 'dep': 'nsubj', 'governorGloss': 'Is', 'dependentGloss': 'king', 'dependent': 4}, {'governor': 6, 'dep': 'case', 'governorGloss': 'England', 'dependentGloss': 'of', 'dependent': 5}, {'governor': 4, 'dep': 'nmod:of', 'governorGloss': 'king', 'dependentGloss': 'England', 'dependent': 6}, {'governor': 1, 'dep': 'punct', 'governorGloss': 'Is', 'dependentGloss': '?', 'dependent': 7}]}

# Parsing result of "List books by Roald Dahl"
def roald():
    return {'parse': '(ROOT\n  (NP\n    (NP (NN List) (NNS books))\n    (PP (IN by)\n      (NP (NNP Roald) (NNP Dahl)))))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'books', 'dependent': 2}, {'governor': 2, 'dep': 'compound', 'governorGloss': 'books', 'dependentGloss': 'List', 'dependent': 1}, {'governor': 5, 'dep': 'case', 'governorGloss': 'Dahl', 'dependentGloss': 'by', 'dependent': 3}, {'governor': 5, 'dep': 'compound', 'governorGloss': 'Dahl', 'dependentGloss': 'Roald', 'dependent': 4}, {'governor': 2, 'dep': 'nmod', 'governorGloss': 'books', 'dependentGloss': 'Dahl', 'dependent': 5}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'books', 'dependent': 2}, {'governor': 2, 'dep': 'compound', 'governorGloss': 'books', 'dependentGloss': 'List', 'dependent': 1}, {'governor': 5, 'dep': 'case', 'governorGloss': 'Dahl', 'dependentGloss': 'by', 'dependent': 3}, {'governor': 5, 'dep': 'compound', 'governorGloss': 'Dahl', 'dependentGloss': 'Roald', 'dependent': 4}, {'governor': 2, 'dep': 'nmod:by', 'governorGloss': 'books', 'dependentGloss': 'Dahl', 'dependent': 5}], 'tokens': [{'originalText': 'List', 'characterOffsetEnd': 4, 'pos': 'NN', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'list', 'word': 'List', 'ner': 'O'}, {'originalText': 'books', 'characterOffsetEnd': 10, 'pos': 'NNS', 'characterOffsetBegin': 5, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'book', 'word': 'books', 'ner': 'O'}, {'originalText': 'by', 'characterOffsetEnd': 13, 'pos': 'IN', 'characterOffsetBegin': 11, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'by', 'word': 'by', 'ner': 'O'}, {'originalText': 'Roald', 'characterOffsetEnd': 19, 'pos': 'NNP', 'characterOffsetBegin': 14, 'index': 4, 'after': ' ', 'before': ' ', 'lemma': 'Roald', 'word': 'Roald', 'ner': 'PERSON'}, {'originalText': 'Dahl', 'characterOffsetEnd': 24, 'pos': 'NNP', 'characterOffsetBegin': 20, 'index': 5, 'after': '', 'before': ' ', 'lemma': 'Dahl', 'word': 'Dahl', 'ner': 'PERSON'}], 'text': 'List books by Roald Dahl', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'books', 'dependent': 2}, {'governor': 2, 'dep': 'compound', 'governorGloss': 'books', 'dependentGloss': 'List', 'dependent': 1}, {'governor': 5, 'dep': 'case', 'governorGloss': 'Dahl', 'dependentGloss': 'by', 'dependent': 3}, {'governor': 5, 'dep': 'compound', 'governorGloss': 'Dahl', 'dependentGloss': 'Roald', 'dependent': 4}, {'governor': 2, 'dep': 'nmod:by', 'governorGloss': 'books', 'dependentGloss': 'Dahl', 'dependent': 5}]}

# Parsing result of "List of presidents of France"
def list_president2():
    return {'parse': '(ROOT\n  (NP\n    (NP (NN List))\n    (PP (IN of)\n      (NP\n        (NP (NNS presidents))\n        (PP (IN of)\n          (NP (NNP France)))))))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'List', 'dependent': 1}, {'governor': 3, 'dep': 'case', 'governorGloss': 'presidents', 'dependentGloss': 'of', 'dependent': 2}, {'governor': 1, 'dep': 'nmod', 'governorGloss': 'List', 'dependentGloss': 'presidents', 'dependent': 3}, {'governor': 5, 'dep': 'case', 'governorGloss': 'France', 'dependentGloss': 'of', 'dependent': 4}, {'governor': 3, 'dep': 'nmod', 'governorGloss': 'presidents', 'dependentGloss': 'France', 'dependent': 5}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'List', 'dependent': 1}, {'governor': 3, 'dep': 'case', 'governorGloss': 'presidents', 'dependentGloss': 'of', 'dependent': 2}, {'governor': 1, 'dep': 'nmod:of', 'governorGloss': 'List', 'dependentGloss': 'presidents', 'dependent': 3}, {'governor': 5, 'dep': 'case', 'governorGloss': 'France', 'dependentGloss': 'of', 'dependent': 4}, {'governor': 3, 'dep': 'nmod:of', 'governorGloss': 'presidents', 'dependentGloss': 'France', 'dependent': 5}], 'tokens': [{'originalText': 'List', 'characterOffsetEnd': 4, 'pos': 'NN', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'list', 'word': 'List', 'ner': 'O'}, {'originalText': 'of', 'characterOffsetEnd': 7, 'pos': 'IN', 'characterOffsetBegin': 5, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'of', 'word': 'of', 'ner': 'O'}, {'originalText': 'presidents', 'characterOffsetEnd': 18, 'pos': 'NNS', 'characterOffsetBegin': 8, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'president', 'word': 'presidents', 'ner': 'O'}, {'originalText': 'of', 'characterOffsetEnd': 21, 'pos': 'IN', 'characterOffsetBegin': 19, 'index': 4, 'after': ' ', 'before': ' ', 'lemma': 'of', 'word': 'of', 'ner': 'O'}, {'originalText': 'France', 'characterOffsetEnd': 28, 'pos': 'NNP', 'characterOffsetBegin': 22, 'index': 5, 'after': '', 'before': ' ', 'lemma': 'France', 'word': 'France', 'ner': 'LOCATION'}], 'text': 'List of presidents of France', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'List', 'dependent': 1}, {'governor': 3, 'dep': 'case', 'governorGloss': 'presidents', 'dependentGloss': 'of', 'dependent': 2}, {'governor': 1, 'dep': 'nmod:of', 'governorGloss': 'List', 'dependentGloss': 'presidents', 'dependent': 3}, {'governor': 5, 'dep': 'case', 'governorGloss': 'France', 'dependentGloss': 'of', 'dependent': 4}, {'governor': 3, 'dep': 'nmod:of', 'governorGloss': 'presidents', 'dependentGloss': 'France', 'dependent': 5}]}

# Parsing result of "Give me the capital of France"
def capital1():
    return {'parse': '(ROOT\n  (S\n    (VP (VB Give)\n      (NP (PRP me))\n      (NP\n        (NP (DT the) (NN capital))\n        (PP (IN of)\n          (NP (NNP France)))))))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'Give', 'dependent': 1}, {'governor': 1, 'dep': 'iobj', 'governorGloss': 'Give', 'dependentGloss': 'me', 'dependent': 2}, {'governor': 4, 'dep': 'det', 'governorGloss': 'capital', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 1, 'dep': 'dobj', 'governorGloss': 'Give', 'dependentGloss': 'capital', 'dependent': 4}, {'governor': 6, 'dep': 'case', 'governorGloss': 'France', 'dependentGloss': 'of', 'dependent': 5}, {'governor': 4, 'dep': 'nmod', 'governorGloss': 'capital', 'dependentGloss': 'France', 'dependent': 6}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'Give', 'dependent': 1}, {'governor': 1, 'dep': 'iobj', 'governorGloss': 'Give', 'dependentGloss': 'me', 'dependent': 2}, {'governor': 4, 'dep': 'det', 'governorGloss': 'capital', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 1, 'dep': 'dobj', 'governorGloss': 'Give', 'dependentGloss': 'capital', 'dependent': 4}, {'governor': 6, 'dep': 'case', 'governorGloss': 'France', 'dependentGloss': 'of', 'dependent': 5}, {'governor': 4, 'dep': 'nmod:of', 'governorGloss': 'capital', 'dependentGloss': 'France', 'dependent': 6}], 'tokens': [{'originalText': 'Give', 'characterOffsetEnd': 4, 'pos': 'VB', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'give', 'word': 'Give', 'ner': 'O'}, {'originalText': 'me', 'characterOffsetEnd': 7, 'pos': 'PRP', 'characterOffsetBegin': 5, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'I', 'word': 'me', 'ner': 'O'}, {'originalText': 'the', 'characterOffsetEnd': 11, 'pos': 'DT', 'characterOffsetBegin': 8, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'the', 'word': 'the', 'ner': 'O'}, {'originalText': 'capital', 'characterOffsetEnd': 19, 'pos': 'NN', 'characterOffsetBegin': 12, 'index': 4, 'after': ' ', 'before': ' ', 'lemma': 'capital', 'word': 'capital', 'ner': 'O'}, {'originalText': 'of', 'characterOffsetEnd': 22, 'pos': 'IN', 'characterOffsetBegin': 20, 'index': 5, 'after': ' ', 'before': ' ', 'lemma': 'of', 'word': 'of', 'ner': 'O'}, {'originalText': 'France', 'characterOffsetEnd': 29, 'pos': 'NNP', 'characterOffsetBegin': 23, 'index': 6, 'after': '', 'before': ' ', 'lemma': 'France', 'word': 'France', 'ner': 'LOCATION'}], 'text': 'Give me the capital of France', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'Give', 'dependent': 1}, {'governor': 1, 'dep': 'iobj', 'governorGloss': 'Give', 'dependentGloss': 'me', 'dependent': 2}, {'governor': 4, 'dep': 'det', 'governorGloss': 'capital', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 1, 'dep': 'dobj', 'governorGloss': 'Give', 'dependentGloss': 'capital', 'dependent': 4}, {'governor': 6, 'dep': 'case', 'governorGloss': 'France', 'dependentGloss': 'of', 'dependent': 5}, {'governor': 4, 'dep': 'nmod:of', 'governorGloss': 'capital', 'dependentGloss': 'France', 'dependent': 6}]}

# Parsing result of "Give the capital of France"
def capital2():
    return {'parse': '(ROOT\n  (S\n    (VP (VB Give)\n      (NP\n        (NP (DT the) (NN capital))\n        (PP (IN of)\n          (NP (NNP France)))))))', 'basicDependencies': [{'governor': 0, 'dependentGloss': 'Give', 'governorGloss': 'ROOT', 'dep': 'ROOT', 'dependent': 1}, {'governor': 3, 'dependentGloss': 'the', 'governorGloss': 'capital', 'dep': 'det', 'dependent': 2}, {'governor': 1, 'dependentGloss': 'capital', 'governorGloss': 'Give', 'dep': 'dobj', 'dependent': 3}, {'governor': 5, 'dependentGloss': 'of', 'governorGloss': 'France', 'dep': 'case', 'dependent': 4}, {'governor': 3, 'dependentGloss': 'France', 'governorGloss': 'capital', 'dep': 'nmod', 'dependent': 5}], 'collapsed-dependencies': [{'governor': 0, 'dependentGloss': 'Give', 'governorGloss': 'ROOT', 'dep': 'ROOT', 'dependent': 1}, {'governor': 3, 'dependentGloss': 'the', 'governorGloss': 'capital', 'dep': 'det', 'dependent': 2}, {'governor': 1, 'dependentGloss': 'capital', 'governorGloss': 'Give', 'dep': 'dobj', 'dependent': 3}, {'governor': 5, 'dependentGloss': 'of', 'governorGloss': 'France', 'dep': 'case', 'dependent': 4}, {'governor': 3, 'dependentGloss': 'France', 'governorGloss': 'capital', 'dep': 'nmod:of', 'dependent': 5}], 'index': 0, 'text': 'Give the capital of France', 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dependentGloss': 'Give', 'governorGloss': 'ROOT', 'dep': 'ROOT', 'dependent': 1}, {'governor': 3, 'dependentGloss': 'the', 'governorGloss': 'capital', 'dep': 'det', 'dependent': 2}, {'governor': 1, 'dependentGloss': 'capital', 'governorGloss': 'Give', 'dep': 'dobj', 'dependent': 3}, {'governor': 5, 'dependentGloss': 'of', 'governorGloss': 'France', 'dep': 'case', 'dependent': 4}, {'governor': 3, 'dependentGloss': 'France', 'governorGloss': 'capital', 'dep': 'nmod:of', 'dependent': 5}], 'tokens': [{'originalText': 'Give', 'ner': 'O', 'lemma': 'give', 'characterOffsetBegin': 0, 'characterOffsetEnd': 4, 'index': 1, 'word': 'Give', 'pos': 'VB', 'after': ' ', 'before': ''}, {'originalText': 'the', 'ner': 'O', 'lemma': 'the', 'characterOffsetBegin': 5, 'characterOffsetEnd': 8, 'index': 2, 'word': 'the', 'pos': 'DT', 'after': ' ', 'before': ' '}, {'originalText': 'capital', 'ner': 'O', 'lemma': 'capital', 'characterOffsetBegin': 9, 'characterOffsetEnd': 16, 'index': 3, 'word': 'capital', 'pos': 'NN', 'after': ' ', 'before': ' '}, {'originalText': 'of', 'ner': 'O', 'lemma': 'of', 'characterOffsetBegin': 17, 'characterOffsetEnd': 19, 'index': 4, 'word': 'of', 'pos': 'IN', 'after': ' ', 'before': ' '}, {'originalText': 'France', 'ner': 'LOCATION', 'lemma': 'France', 'characterOffsetBegin': 20, 'characterOffsetEnd': 26, 'index': 5, 'word': 'France', 'pos': 'NNP', 'after': '', 'before': ' '}]}

# Parsing result of "What is the most expensive car in the world?"
def car():
    return {'parse': '(ROOT\n  (SBARQ\n    (WHNP (WP What))\n    (SQ (VBZ is)\n      (NP\n        (NP (DT the)\n          (ADJP (RBS most) (JJ expensive))\n          (NN car))\n        (PP (IN in)\n          (NP (DT the) (NN world)))))\n    (. ?)))', 'basicDependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'What', 'dependent': 1}, {'governor': 6, 'dep': 'det', 'governorGloss': 'car', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 5, 'dep': 'advmod', 'governorGloss': 'expensive', 'dependentGloss': 'most', 'dependent': 4}, {'governor': 6, 'dep': 'amod', 'governorGloss': 'car', 'dependentGloss': 'expensive', 'dependent': 5}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'car', 'dependent': 6}, {'governor': 9, 'dep': 'case', 'governorGloss': 'world', 'dependentGloss': 'in', 'dependent': 7}, {'governor': 9, 'dep': 'det', 'governorGloss': 'world', 'dependentGloss': 'the', 'dependent': 8}, {'governor': 6, 'dep': 'nmod', 'governorGloss': 'car', 'dependentGloss': 'world', 'dependent': 9}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 10}], 'collapsed-ccprocessed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'What', 'dependent': 1}, {'governor': 6, 'dep': 'det', 'governorGloss': 'car', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 5, 'dep': 'advmod', 'governorGloss': 'expensive', 'dependentGloss': 'most', 'dependent': 4}, {'governor': 6, 'dep': 'amod', 'governorGloss': 'car', 'dependentGloss': 'expensive', 'dependent': 5}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'car', 'dependent': 6}, {'governor': 9, 'dep': 'case', 'governorGloss': 'world', 'dependentGloss': 'in', 'dependent': 7}, {'governor': 9, 'dep': 'det', 'governorGloss': 'world', 'dependentGloss': 'the', 'dependent': 8}, {'governor': 6, 'dep': 'nmod:in', 'governorGloss': 'car', 'dependentGloss': 'world', 'dependent': 9}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 10}], 'tokens': [{'originalText': 'What', 'characterOffsetEnd': 4, 'pos': 'WP', 'characterOffsetBegin': 0, 'index': 1, 'after': ' ', 'before': '', 'lemma': 'what', 'word': 'What', 'ner': 'O'}, {'originalText': 'is', 'characterOffsetEnd': 7, 'pos': 'VBZ', 'characterOffsetBegin': 5, 'index': 2, 'after': ' ', 'before': ' ', 'lemma': 'be', 'word': 'is', 'ner': 'O'}, {'originalText': 'the', 'characterOffsetEnd': 11, 'pos': 'DT', 'characterOffsetBegin': 8, 'index': 3, 'after': ' ', 'before': ' ', 'lemma': 'the', 'word': 'the', 'ner': 'O'}, {'originalText': 'most', 'characterOffsetEnd': 16, 'pos': 'RBS', 'characterOffsetBegin': 12, 'index': 4, 'after': ' ', 'before': ' ', 'lemma': 'most', 'word': 'most', 'ner': 'O'}, {'originalText': 'expensive', 'characterOffsetEnd': 26, 'pos': 'JJ', 'characterOffsetBegin': 17, 'index': 5, 'after': ' ', 'before': ' ', 'lemma': 'expensive', 'word': 'expensive', 'ner': 'O'}, {'originalText': 'car', 'characterOffsetEnd': 30, 'pos': 'NN', 'characterOffsetBegin': 27, 'index': 6, 'after': ' ', 'before': ' ', 'lemma': 'car', 'word': 'car', 'ner': 'O'}, {'originalText': 'in', 'characterOffsetEnd': 33, 'pos': 'IN', 'characterOffsetBegin': 31, 'index': 7, 'after': ' ', 'before': ' ', 'lemma': 'in', 'word': 'in', 'ner': 'O'}, {'originalText': 'the', 'characterOffsetEnd': 37, 'pos': 'DT', 'characterOffsetBegin': 34, 'index': 8, 'after': ' ', 'before': ' ', 'lemma': 'the', 'word': 'the', 'ner': 'O'}, {'originalText': 'world', 'characterOffsetEnd': 43, 'pos': 'NN', 'characterOffsetBegin': 38, 'index': 9, 'after': '', 'before': ' ', 'lemma': 'world', 'word': 'world', 'ner': 'O'}, {'originalText': '?', 'characterOffsetEnd': 44, 'pos': '.', 'characterOffsetBegin': 43, 'index': 10, 'after': '', 'before': '', 'lemma': '?', 'word': '?', 'ner': 'O'}], 'text': 'What is the most expensive car in the world?', 'index': 0, 'collapsed-dependencies': [{'governor': 0, 'dep': 'ROOT', 'governorGloss': 'ROOT', 'dependentGloss': 'is', 'dependent': 2}, {'governor': 2, 'dep': 'dobj', 'governorGloss': 'is', 'dependentGloss': 'What', 'dependent': 1}, {'governor': 6, 'dep': 'det', 'governorGloss': 'car', 'dependentGloss': 'the', 'dependent': 3}, {'governor': 5, 'dep': 'advmod', 'governorGloss': 'expensive', 'dependentGloss': 'most', 'dependent': 4}, {'governor': 6, 'dep': 'amod', 'governorGloss': 'car', 'dependentGloss': 'expensive', 'dependent': 5}, {'governor': 2, 'dep': 'nsubj', 'governorGloss': 'is', 'dependentGloss': 'car', 'dependent': 6}, {'governor': 9, 'dep': 'case', 'governorGloss': 'world', 'dependentGloss': 'in', 'dependent': 7}, {'governor': 9, 'dep': 'det', 'governorGloss': 'world', 'dependentGloss': 'the', 'dependent': 8}, {'governor': 6, 'dep': 'nmod:in', 'governorGloss': 'car', 'dependentGloss': 'world', 'dependent': 9}, {'governor': 2, 'dep': 'punct', 'governorGloss': 'is', 'dependentGloss': '?', 'dependent': 10}]}

def tripleProductionData():
    '''
        Return data corresponding to a tree (root-0)--dep-->(child-1)
    '''
    root = DependenciesTree("root-0")
    child = DependenciesTree("child-1",dependency="dep",parent=root)
    root.child = [child]
    nodeToID = {root:0, child:1}
    bt = TriplesBucket()
    return (root,nodeToID,bt)
